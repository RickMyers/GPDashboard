<?xml version="1.0"?>
<!--

Generic enrollment applications related actions

For Controller reference, please see "Anatomy of a Controller" at https://humbleprogramming.com/pages/Controllers.htmls
-->
<controller name="onlineapps" use="Smarty3" author="Richard Myers" email="rmyers@aflacbenefitssolutions.com">
    <actions>
        
        <action name="init">
            <description>the initial queue layout</description>
        </action>

        <!-- ############################################################### -->
        
        <action name="refresh" blocking="off"> 
            <description>This is the recurring poll action for argus application queues</description>   
            <entity namespace="argus" class="online_applications" rows="rows" page="aoinq"  id="new"  defaultRows='14' defaultPage='1'>
                <parameter name='status' source='post'  default='N' />
            </entity>
            <entity namespace="argus" class="online_applications" rows="rows" page="oaipq"  id="inprogress"  defaultRows='14' defaultPage='1'>
                <parameter name='status' source='post'  default='I' />
            </entity>
            <entity namespace="argus" class="online_applications" rows="rows" page="oacaq" id="completed" defaultRows='14' defaultPage='1'>
                <parameter name='status' source='post'  default='A' />
            </entity>
            <entity namespace="argus" class="online_applications" rows="rows" page="oaerr" id="errored" defaultRows='14' defaultPage='1'>
                <parameter name='status' source='post'  default='E' />
            </entity>              
        </action>
         
        <!-- ############################################################### -->
        
        <action name="fetch"  blocking="off" event="fetchOnlineApplications" comment="Triggering the retrieve of online apps, mainly E-Health" passalong="">
            <description>Looks for new applications for Argus</description>
            <!--model response="true" namespace="ehealth" class="application" method="execute">
                
            </model-->
        </action>
        

        <!-- ############################################################### -->
        
        <action name="queue">
            <description>Reloads the contents of an online application queue</description>
            <helper namespace="humble" class='data' id='helper'>
                <parameter name='queue_id' source='request' required='true' />
            </helper>

            <switch id="helper" method="getQueueId">
                <case value="oainq">
                    <entity namespace="argus" response='true' class="online_applications" rows="rows" page="page" defaultRows='14' defaultPage='1' method="fetch" >
                        <parameter name="status" source="post" default="N" />
                    </entity>
                </case>
                <case value="oaipq">
                    <entity namespace="argus" response='true' class="online_applications" rows="rows" page="page" defaultRows='14' defaultPage='1' method="fetch" >
                        <parameter name="status" source="post" default="I" />
                    </entity>
                </case>
                <case value="oacaq">
                    <entity namespace="argus" response='true' class="online_applications" rows="rows" page="page" defaultRows='14' defaultPage='1' method="fetch" >
                        <parameter name="status" source="post" default="A" />
                    </entity>
                </case>
                <case value="oaerr">
                    <entity namespace="argus" response='true' class="online_applications" rows="rows" page="page" defaultRows='14' defaultPage='1' method="fetch" >
                        <parameter name="status" source="post" default="E" />
                    </entity>
                </case>                
            </switch>            
        </action>

        <!-- ############################################################### -->
        
        <action name="pdf" output="PDF">
            <description>Outputs a PDF</description>
            <helper namespace="argus" class="application" id="application">
                <parameter name='app_id' source='request' required="true" />
            </helper> 
        </action>

        <!-- ############################################################### -->
        
        <action name="view" passalong="window_id">
            <description>Views a PDF</description>
            <entity namespace="argus" class="online_applications" id='application' method="load">
                <parameter name='id' source='post' required="true" />
            </entity>
        </action>
        
        <!-- ############################################################### -->
        
        <action name="event" passalong="window_id">
            <description>Details the steps in an event</description>
            <mongo namespace="paradigm" class="events" id="event">
                <parameter name="_id" value="id" source="post" reguired="true" />
            </mongo>
            <helper namespace="argus" class="application" id="helper" />
        </action>
        
        <!-- ############################################################### -->
        
        <action name="group" passalong="windowId">
            <description>This is the configuration for the workflow element that sets the Aldera group id to use when adding a member</description>
            <mongo namespace="paradigm" class="elements" id='element'>
                <parameter name='id' source='post' default='' />
            </mongo>
        </action>
                
        <!-- ############################################################### -->        
        
        <action name="status" passalong="windowId">
            <description>This is the configuration for the workflow element that sets the status of an application that we downloaded and are processing</description>
            <mongo namespace="paradigm" class="elements" id='element'>
                <parameter name='id' source='post' default='' />
            </mongo>
        </action>

        <!-- ############################################################### -->
        
        <action name="visionrider" passalong="windowId">
            <description>This is the configuration for the workflow element that determines if there is a valid vision rider on the application</description>
            <mongo namespace="paradigm" class="elements" id='element'>
                <parameter name='id' source='post' default='' />
            </mongo>
        </action>                
    </actions>
</controller>